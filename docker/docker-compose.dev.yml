version: '3.9'

services:
  mongodb:
    image: mongo:7-jammy
    container_name: stock-mgmt-mongodb-dev
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: stock-management
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - stock-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/stock-management --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../apps/backend
      dockerfile: Dockerfile
      target: development
    container_name: stock-mgmt-backend-dev
    restart: unless-stopped
    ports:
      - '3001:3001'
      - '9229:9229' # Debug port
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb:27017/stock-management
      PORT: 3001
    env_file:
      - ../apps/backend/.env
    volumes:
      - ../apps/backend/src:/app/src
      - ../apps/backend/package.json:/app/package.json
      - backend_node_modules:/app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - stock-network
    command: pnpm start:dev

  frontend:
    build:
      context: ../apps/frontend
      dockerfile: Dockerfile
      target: development
    container_name: stock-mgmt-frontend-dev
    restart: unless-stopped
    ports:
      - '5173:5173'
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3001/api
    volumes:
      - ../apps/frontend/src:/app/src
      - ../apps/frontend/index.html:/app/index.html
      - ../apps/frontend/package.json:/app/package.json
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - stock-network
    command: pnpm dev --host 0.0.0.0

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  stock-network:
    driver: bridge
